{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  export let words;\n\n  let filteredWords = words;\n  let filteredWordsCount = 0;\n  let searchString = \"\";\n\n  let timeout;\n  function filterWords() {\n    if (timeout) {\n      window.clearTimeout(timeout);\n    }\n    timeout = window.setTimeout(function () {\n      filteredWords = words.filter((word) => word.word.includes(searchString));\n      filteredWordsCount = words.length - filteredWords.length;\n    }, 100);\n  }\n\n  let lastCopiedColour;\n  let clickedColour;\n\n  function copyHex(hexcode) {\n    lastCopiedColour = hexcode;\n    clickedColour = hexcode;\n    navigator.clipboard.writeText(`#${hexcode}`).then(() => {\n      console.log(\"copied!\");\n    });\n\n    setTimeout(function () {\n      clickedColour = null;\n    }, 400);\n  }\n</script>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    margin: 0 auto;\n  }\n\n  h1 {\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n    transition: color 250ms;\n  }\n\n  .filter-cont {\n    margin: 15px 0;\n  }\n\n  .filter-cont input {\n    margin-left: 10px;\n    border-radius: 6px;\n  }\n\n  .words {\n    width: min(90vw, 1200px);\n    margin: 0 auto;\n    display: grid;\n    grid-gap: 30px;\n    grid-template-columns: repeat(auto-fill, 250px);\n    justify-content: center;\n  }\n\n  .word {\n    display: flex;\n    width: 250px;\n    justify-content: flex-end;\n    cursor: pointer;\n  }\n  .original {\n    text-transform: capitalize;\n  }\n\n  .colour {\n    height: 24px;\n    width: 80px;\n    border: 1px solid black;\n    border-radius: 6px;\n    margin-left: 10px;\n  }\n\n  .copy-hex {\n    height: 100%;\n    transition: transform 300ms;\n    transform: rotateX(90deg);\n\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n\n  .colour:hover .copy-hex {\n    transform: rotateX(0deg);\n  }\n  .copy-hex.boop,\n  .copy-hex.boop:hover {\n    transition: transform 400ms ease-out;\n\n    transform: scale(110%) rotateX(0deg);\n  }\n\n  footer {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    text-align: center;\n    margin-top: 30px;\n  }\n  footer .me {\n    flex-basis: 100%;\n  }\n  footer a {\n    display: block;\n    margin: 5px 15px;\n  }\n</style>\n\n<main>\n  <h1 style={`color:  #${lastCopiedColour};`}>Hex-Words</h1>\n  <p>\n    You're familiar with the standard\n    <a\n      href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Color_keywords\"\n      target=\"_blank\">\n      CSS colour keywords,\n    </a>\n    now learn about the ones hidden in hexcodes!\n  </p>\n  <p>Click on a colour to copy the colour's hexcode.</p>\n  <h2>\n    {`There ${filteredWords.length > 1 ? 'are' : 'is'} ${filteredWords.length} word${filteredWords.length > 1 ? 's' : ''}!`}\n  </h2>\n\n  {#if filteredWordsCount > 0}\n    <h3>({filteredWordsCount} words are hidden)</h3>\n  {/if}\n\n  <div class=\"filter-cont\">\n    <label for=\"filter\">\n      Search for words:\n      <input\n        name=\"filter\"\n        type=\"text\"\n        bind:value={searchString}\n        on:keydown={filterWords} />\n    </label>\n  </div>\n\n  <div class=\"words\">\n    {#each filteredWords as word}\n      <div class=\"word\" on:click={copyHex(word.leet)}>\n        <div>\n          <span class=\"original\">{word.word}</span>\n          â†’ #{word.leet}\n        </div>\n        <div class=\"colour\" style={`background-color: #${word.leet};`}>\n          <div class=\"copy-hex\" class:boop={clickedColour == word.leet}>\n            {clickedColour == word.leet ? 'COPIED!' : 'COPY'}\n          </div>\n        </div>\n      </div>\n    {/each}\n  </div>\n\n  {#if filteredWords.length == 0}\n    <h3>No words containing \"{searchString}\" found</h3>\n  {/if}\n\n</main>\n<footer>\n  <div class=\"me\">Created by Mathew Paul.</div>\n  <a href=\"https://twitter.com/matt4ttack\" target=\"_blank\">Twitter</a>\n  <a href=\"https://github.com/matt-auckland\" target=\"_blank\">Github</a>\n</footer>\n"
  ],
  "names": [],
  "mappings": "AAmCE,IAAI,4BAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,EAAE,4BAAC,CAAC,AACF,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,CAChB,UAAU,CAAE,KAAK,CAAC,KAAK,AACzB,CAAC,AAED,YAAY,4BAAC,CAAC,AACZ,MAAM,CAAE,IAAI,CAAC,CAAC,AAChB,CAAC,AAED,0BAAY,CAAC,KAAK,cAAC,CAAC,AAClB,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,MAAM,4BAAC,CAAC,AACN,KAAK,CAAE,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,CACxB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,IAAI,CACd,qBAAqB,CAAE,OAAO,SAAS,CAAC,CAAC,KAAK,CAAC,CAC/C,eAAe,CAAE,MAAM,AACzB,CAAC,AAED,KAAK,4BAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,KAAK,CACZ,eAAe,CAAE,QAAQ,CACzB,MAAM,CAAE,OAAO,AACjB,CAAC,AACD,SAAS,4BAAC,CAAC,AACT,cAAc,CAAE,UAAU,AAC5B,CAAC,AAED,OAAO,4BAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,SAAS,4BAAC,CAAC,AACT,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,SAAS,CAAC,KAAK,CAC3B,SAAS,CAAE,QAAQ,KAAK,CAAC,CAEzB,gBAAgB,CAAE,IAAI,CACtB,mBAAmB,CAAE,IAAI,CACzB,eAAe,CAAE,IAAI,CACrB,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,qBAAO,MAAM,CAAC,SAAS,cAAC,CAAC,AACvB,SAAS,CAAE,QAAQ,IAAI,CAAC,AAC1B,CAAC,AACD,SAAS,iCAAK,CACd,SAAS,iCAAK,MAAM,AAAC,CAAC,AACpB,UAAU,CAAE,SAAS,CAAC,KAAK,CAAC,QAAQ,CAEpC,SAAS,CAAE,MAAM,IAAI,CAAC,CAAC,QAAQ,IAAI,CAAC,AACtC,CAAC,AAED,MAAM,4BAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,IAAI,AAClB,CAAC,AACD,oBAAM,CAAC,GAAG,cAAC,CAAC,AACV,UAAU,CAAE,IAAI,AAClB,CAAC,AACD,oBAAM,CAAC,CAAC,cAAC,CAAC,AACR,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,GAAG,CAAC,IAAI,AAClB,CAAC"
}